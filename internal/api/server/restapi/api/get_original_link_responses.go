// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Maksim646/ozon_shortner/internal/api/definition"
)

// GetOriginalLinkOKCode is the HTTP code returned for type GetOriginalLinkOK
const GetOriginalLinkOKCode int = 200

/*
GetOriginalLinkOK Original Link Response

swagger:response getOriginalLinkOK
*/
type GetOriginalLinkOK struct {

	/*
	  In: Body
	*/
	Payload *models.OriginalLink `json:"body,omitempty"`
}

// NewGetOriginalLinkOK creates GetOriginalLinkOK with default headers values
func NewGetOriginalLinkOK() *GetOriginalLinkOK {

	return &GetOriginalLinkOK{}
}

// WithPayload adds the payload to the get original link o k response
func (o *GetOriginalLinkOK) WithPayload(payload *models.OriginalLink) *GetOriginalLinkOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get original link o k response
func (o *GetOriginalLinkOK) SetPayload(payload *models.OriginalLink) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOriginalLinkOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOriginalLinkBadRequestCode is the HTTP code returned for type GetOriginalLinkBadRequest
const GetOriginalLinkBadRequestCode int = 400

/*
GetOriginalLinkBadRequest Bad request

swagger:response getOriginalLinkBadRequest
*/
type GetOriginalLinkBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOriginalLinkBadRequest creates GetOriginalLinkBadRequest with default headers values
func NewGetOriginalLinkBadRequest() *GetOriginalLinkBadRequest {

	return &GetOriginalLinkBadRequest{}
}

// WithPayload adds the payload to the get original link bad request response
func (o *GetOriginalLinkBadRequest) WithPayload(payload *models.Error) *GetOriginalLinkBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get original link bad request response
func (o *GetOriginalLinkBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOriginalLinkBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOriginalLinkInternalServerErrorCode is the HTTP code returned for type GetOriginalLinkInternalServerError
const GetOriginalLinkInternalServerErrorCode int = 500

/*
GetOriginalLinkInternalServerError Internal server error

swagger:response getOriginalLinkInternalServerError
*/
type GetOriginalLinkInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOriginalLinkInternalServerError creates GetOriginalLinkInternalServerError with default headers values
func NewGetOriginalLinkInternalServerError() *GetOriginalLinkInternalServerError {

	return &GetOriginalLinkInternalServerError{}
}

// WithPayload adds the payload to the get original link internal server error response
func (o *GetOriginalLinkInternalServerError) WithPayload(payload *models.Error) *GetOriginalLinkInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get original link internal server error response
func (o *GetOriginalLinkInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOriginalLinkInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
